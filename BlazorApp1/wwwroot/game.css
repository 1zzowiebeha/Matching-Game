/* ======
Animations

These are placed at the top of the file
to allow the cascade to override the properties
the animation changes.
========= */

@keyframes intro {
    from
    {
        transform: rotate(150deg);
        scale: .1;
        opacity: 0.1;
        /* can't use cursor in animation? correct, as booleans cannot be interpolated. */
        /* cursor: none; */
    }

    to {
        transform: none;
        scale: 1;
        opacity: 1;
    }
}

@keyframes selected {
  50% {
    transform: rotate(-6deg);
  }
  100% {
    transform: rotate(6deg);
  }
}

@keyframes fadeOut {
    from {
        opacity: 1;
    }

    to {
        opacity: 0;
    }
}


/* ======
Body
========= */

.container-ez {
    display: flex;
    flex-wrap: wrap;
    /* 10rem width children, 4 per row,  with .1rem gap*/
    width: calc(32rem + .1rem * 4);
    gap: .1rem;

    margin-left: auto;
    margin-right: auto;
    padding: 0;

    margin-bottom: 1em;

    & button {
        /* interestingly, width/height em are affected by child textnode font-size em */
        width: 8rem;
        height: 8rem;
        font-size: 2rem;
        text-shadow: 0 0 2px black;
        border: 1px solid transparent;
        border-radius: 12px;
        background-color: #69c280;
        transition: background-color .2s, font-size .1s, transform .2s, scale .1s, border .2s;
     
        /* For some reason the animation's `transform: none` takes precedence over the cascade
           when the `forwards` value is provided here.
        */
        &.intro-animation {
            animation: intro 1.5s 1;
        }

        &:not(.selected):not(.matched):hover {
            cursor: pointer;
            background-color: #55a66a;
            font-size: 2.2rem;
            transform: rotate(5deg) scale(1.1);
            border: 1px solid rgba(67, 142, 87, 0.44);
            z-index: 1;
        }
               
        &.matched {
            background-color: #abe6bb;
            cursor: default;
        }

        &.selected {
            background-color: #55a66a;
            font-size: 2.2rem;
            scale: 1.1;
            z-index: 1;
          
            transform: rotate(6deg);
            animation: selected infinite .5s;
        }
    }
}



/* why does normal behave like stretch for align-content? and why do we need it instead of stretch? */

.container {
    padding: 0;
    
    width: 504px;
    height: 204px;
    
    flex-direction: row;
    
    & .row {
        margin: 0;
        padding: 0;
        
        width: 100%;
        height: 100%;

        gap: 1px;
        
        & .col-4 {
            padding: 0;
        }
    }
    
    & button {
        padding: 0;
        margin:  0;
        
        min-width: 100px;
        min-height: 100px;
        
        font-size: 1.8em;

        border: none;
        border-radius: 16px;
        background-color: #8fb46a;
    }
}